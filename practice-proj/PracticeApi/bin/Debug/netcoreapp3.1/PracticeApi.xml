<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PracticeApi</name>
    </assembly>
    <members>
        <member name="T:PracticeApi.Controllers.FileUploadController">
            <summary>
            图片上传接口
            </summary>
        </member>
        <member name="F:PracticeApi.Controllers.FileUploadController._env">
            <summary>
            路径获取
            </summary>
        </member>
        <member name="F:PracticeApi.Controllers.FileUploadController._log">
            <summary>
            日志记录
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.FileUploadController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            构造注入
            </summary>
            <param name="webHostEnvironment"></param>
        </member>
        <member name="M:PracticeApi.Controllers.FileUploadController.ImageUpload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            图片上传
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.FileUploadController.MediaUpload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            媒体文件上传
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Controllers.NewsCategoryController">
            <summary>
            新闻分类控制器
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.#ctor(Practice.Services.INewsCategoryService)">
            <summary>
            构造注入
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.SelectCategory">
            <summary>
            查询新闻分类
            </summary>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.InsertCategory(Practice.RequestModels.ReqNewsCategoryModel)">
            <summary>
            添加新闻分类
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.DeleteCategory(Practice.RequestModels.ReqNewsCategoryDeleteModel)">
            <summary>
            删除新闻分类
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.UpdateCategory(Practice.RequestModels.ReqNewsCategoryChangeModel)">
            <summary>
            修改新闻分类
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.SelectCategoryList(System.Int32)">
            <summary>
            联动查询分类列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.SelectCategoryAll(System.Int32,System.Int32,System.String)">
            <summary>
            查询详细分类数据
            </summary>
            <param name="name"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsCategoryController.RecommendSort(Practice.RequestModels.ReqNewsCategorySortModel)">
            <summary>
            更改推荐值
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Controllers.NewsDetailController">
            <summary>
            新闻详情控制器
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.NewsDetailController.#ctor(Practice.Services.INewsDetailService)">
            <summary>
            构造注入
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.NewsDetailController.SelectDetails(System.String,System.Int32)">
            <summary>
            根据标题查询新闻
            </summary>
            <param name="title">新闻标题</param>
            <param name="pageIndex">当前页</param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsDetailController.SelectDetailsCategory(System.Int32,System.Int32)">
            <summary>
            根据新闻类别查询新闻
            </summary>
            <param name="id">新闻类别ID</param>
            <param name="pageIndex">当前页</param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsDetailController.SelectDetailsContent(System.Int32,System.Int32)">
            <summary>
            查询新闻正文
            </summary>
            <param name="id">新闻ID</param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsDetailController.BackGroundPage(System.Int32,System.Int32)">
            <summary>
            查询后台首页数据
            </summary>
            <param name="status">状态</param>
            <param name="pageIndex">分页</param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsDetailController.ClassifyRecommend(System.Int32)">
            <summary>
            分类推荐查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Controllers.NewsManagerController">
            <summary>
            新闻详情控制器
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.NewsManagerController.#ctor(Practice.Services.INewsManagerService)">
            <summary>
            构造注入
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.NewsManagerController.SelectNewsManager(System.Int32,System.Int32)">
            <summary>
            查询新闻管理界面数据
            </summary>
            <param name="pageIndex"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsManagerController.SelectNewsManagerTitle(System.String,System.Int32)">
            <summary>
            新闻管理界面标题模糊查询
            </summary>
            <param name="title"></param>
            <param name="pageIndex">分页</param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsManagerController.NewsArticle(Practice.RequestModels.ReqNewsDetailModel)">
            <summary>
            新建新闻
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsManagerController.NewsState(Practice.RequestModels.ReqNewsDetailStateModel)">
            <summary>
            新闻状态更改
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.NewsManagerController.NewsModify(Practice.RequestModels.ReqNewsDetailUpdateModel)">
            <summary>
            修改新闻
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Controllers.OpeaateLogController">
            <summary>
            新闻分类控制器
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.OpeaateLogController.#ctor(Practice.Services.IOperateLogService)">
            <summary>
            构造注入
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.OpeaateLogController.SelectLogTime(System.Int32,System.Int32,System.String)">
            <summary>
            按时间查询操作日志
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="operateTime"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.OpeaateLogController.SelectLogText(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            多条件查询操作日志
            </summary>
            <param name="account"></param>
            <param name="column"></param>
            <param name="action"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.OpeaateLogController.CategoryEdit(System.Int32)">
            <summary>
            分类修改记录查询
            </summary>
            <param name="id"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Controllers.TestController">
            <summary>
            测试控制器
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.TestController.#ctor(Practice.Services.ITestService,Practice.Services.ITokenService)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.TestController.Do">
            <summary>
            就是干
            <author>luoyi</author>
            </summary>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.TestController.Get">
            <summary>
            创建token
            </summary>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.TestController.Validation">
            <summary>
            token校验
            </summary>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.TestController.Version">
            <summary>
            多版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.TestController.GetValue">
            <summary>
            从数据库取值(异步实现)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.TestController.Log">
            <summary>
            日志输出
            </summary>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Controllers.UserAccountController">
            <summary>
            账户控制器
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.UserAccountController.#ctor(Practice.Services.IUserAccountService)">
            <summary>
            构造注入
            </summary>
            <param name="userAccountService"></param>
        </member>
        <member name="M:PracticeApi.Controllers.UserAccountController.Login(Practice.RequestModels.ReqLoginModel)">
            <summary>
            登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Controllers.UserAccountController.Register(Practice.RequestModels.ReqRegisterModel)">
            <summary>
            注册
            </summary>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Controllers.VerifyCodeController">
            <summary>
            验证码控制器
            </summary>
        </member>
        <member name="M:PracticeApi.Controllers.VerifyCodeController.#ctor(Practice.Services.IVerifyCodeService)">
            <summary>
            构造注入
            </summary>
            <param name="verifyCodeService"></param>
        </member>
        <member name="M:PracticeApi.Controllers.VerifyCodeController.VerifyCode">
            <summary>
            生成验证码
            </summary>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Extensions.AspNetCore.RequiredFromQueryActionConstraint">
            <summary>
            Query 参数必须匹配
            </summary>
        </member>
        <member name="T:PracticeApi.Extensions.AspNetCore.RequiredFromQueryAttribute">
            <summary>
            声明该 Query 参数是路由必须匹配
            </summary>
        </member>
        <member name="P:PracticeApi.Extensions.AspNetCore.RequiredFromQueryAttribute.Value">
            <summary>
            约束的参数值，可以不提供，不提供参数值时，则要求有这个参数，如果提供则要求参数值也要匹配。
            </summary>
        </member>
        <member name="T:PracticeApi.Extensions.Autofac.DtoEntityMapperModule">
            <summary>
            Dto Entity 映射
            </summary>
        </member>
        <member name="M:PracticeApi.Extensions.Autofac.DtoEntityMapperModule.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            初始化一个 Dto Entity 映射 实例
            </summary>
            <param name="assembliesToScan"></param>
        </member>
        <member name="M:PracticeApi.Extensions.Autofac.DtoEntityMapperModule.#ctor(System.Reflection.Assembly[])">
            <summary>
            初始化一个 Dto Entity 映射 实例
            
            </summary>
            <param name="assembliesToScan"></param>
        </member>
        <member name="M:PracticeApi.Extensions.Autofac.DtoEntityMapperModule.Load(Autofac.ContainerBuilder)">
            <inheritdoc />
        </member>
        <member name="T:PracticeApi.Extensions.Base.BaseApiController">
            <summary>
            控制器基类
            </summary>
        </member>
        <member name="P:PracticeApi.Extensions.Base.BaseApiController.UserId">
            <summary>
            userId
            </summary>
        </member>
        <member name="P:PracticeApi.Extensions.Base.BaseApiController.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:PracticeApi.Extensions.Base.BaseApiController.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="T:PracticeApi.Extensions.Base.IdentityExtension">
            <summary>
            Identity 扩展类
            </summary>
        </member>
        <member name="M:PracticeApi.Extensions.Base.IdentityExtension.GetIdentityValue``1(System.Security.Principal.IIdentity,System.String)">
            <summary>
            获取Identity中的信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="identity"></param>
            <param name="claimType"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Extensions.Base.IdentityExtension.GetUserId``1(System.Security.Principal.IIdentity)">
            <summary>
            获取 userId
            </summary>
            <typeparam name="T"></typeparam>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Extensions.Base.IdentityExtension.GetRole``1(System.Security.Principal.IIdentity)">
            <summary>
            获取角色
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Extensions.Base.IdentityExtension.GetNickName``1(System.Security.Principal.IIdentity)">
            <summary>
            获取昵称
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Extensions.Cors.CorsPolicyExtensions">
            <summary>
            extenion method for CorsPolicy
            </summary>
        </member>
        <member name="M:PracticeApi.Extensions.Cors.CorsPolicyExtensions.AllowedToAllowWildcardSubdomains(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,System.Boolean)">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.IsOriginAllowed"/> property of the policy to be a function
            that allows origins to match a configured wildcarded domain when evaluating if the 
            origin is allowed.
            </summary>
            <param name="policy"></param>
            <param name="allowLocalhost">if allow any origin from localhost with any port or without port</param>
            <returns></returns>
        </member>
        <member name="M:PracticeApi.Extensions.Cors.CorsPolicyExtensions.IsSubdomainOf(System.Uri,System.Uri)">
            <summary>
            
            </summary>
            <param name="subdomain"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Extensions.Newtonsoft.LongStringConverter">
            <summary>
            long to string
            </summary>
        </member>
        <member name="M:PracticeApi.Extensions.Newtonsoft.LongStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Int64,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:PracticeApi.Extensions.Newtonsoft.LongStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Int64,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:PracticeApi.Extensions.Swagger.AssignOperationVendorExtensions">
            <summary>
            swagger 操作扩展
            </summary>
        </member>
        <member name="M:PracticeApi.Extensions.Swagger.AssignOperationVendorExtensions.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            添加应用
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:PracticeApi.Extensions.Swagger.ConfigureSwaggerOptions">
            <summary>
            Swagger选项配置器
            </summary>
        </member>
        <member name="M:PracticeApi.Extensions.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            初始化一个 Swagger选项配置器 实例
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:PracticeApi.Extensions.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            配置
            </summary>
            <param name="options">Swagger选项</param>
        </member>
        <member name="T:PracticeApi.Extensions.Swagger.ExtensionsFromSwashbuckle">
            <summary>
            从 Swashbuckle 库拷贝的扩展类，然后自己加了一个 <see cref="M:PracticeApi.Extensions.Swagger.ExtensionsFromSwashbuckle.GetGroupKey(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription)"/>
            </summary>
        </member>
        <member name="T:PracticeApi.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:PracticeApi.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PracticeApi.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:PracticeApi.Startup">
            <summary>
            启动配置类
            </summary>
        </member>
        <member name="M:PracticeApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:PracticeApi.Startup.Configuration">
            <summary>
            应用程序配置
            </summary>
        </member>
        <member name="P:PracticeApi.Startup.Environment">
            <summary>
            environment
            </summary>
        </member>
        <member name="M:PracticeApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
        </member>
        <member name="M:PracticeApi.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            依赖注入
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:PracticeApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
        </member>
    </members>
</doc>
